Lessons in Go

Edward Muller
Heroku
edward@heroku.com
http://icanhazdowntime.org
@freeformz

* Heroku
.image heroku-logo-stroke-purple.svg 400 _

* Disclaimers

This talk is a WIP.

* Safe Harbor

Safe harbor statement under the Private Securities Litigation Reform Act of 1995:
This presentation may contain forward-looking statements that involve risks, uncertainties, and assumptions. If any such uncertainties materialize or if any of the assumptions proves incorrect, the results of salesforce.com, inc. could differ materially from the results expressed or implied by the forward-looking statements we make. All statements other than statements of historical fact could be deemed forward-looking, including any projections of product or service availability, subscriber growth, earnings, revenues, or other financial items and any statements regarding strategies or plans of management for future operations, statements of belief, any statements concerning new, planned, or upgraded services or technology developments and customer contracts or use of our services.
The risks and uncertainties referred to above include – but are not limited to – risks associated with developing and delivering new functionality for our service, new products and services, our new business model, our past operating losses, possible fluctuations in our operating results and rate of growth, interruptions or delays in our Web hosting, breach of our security measures, the outcome of any litigation, risks associated with completed and any possible mergers and acquisitions, the immature market in which we operate, our relatively limited operating history, our ability to expand, retain, and motivate our employees and manage our growth, new releases of our service and successful customer deployment, our limited history reselling non-salesforce.com products, and utilization and selling to larger enterprise customers. Further information on potential factors that could affect the financial results of salesforce.com, inc. is included in our annual report on Form 10-K for the most recent fiscal year and in our quarterly report on Form 10-Q for the most recent fiscal quarter. These documents and others containing important disclosures are available on the SEC Filings section of the Investor Information section of our Web site.
Any unreleased services or features referenced in this or other presentations, press releases or public statements are not currently available and may not be delivered on time or at all. Customers who purchase our services should make the purchase decisions based upon features that are currently available. Salesforce.com, inc. assumes no obligation and does not intend to update these forward-looking statements.

* Adoption @ Heroku
- internal log delivery (log-shuttle)
- hk (experimental heroku CLI in Go)
- system metrics (ssh)
- git push heroku master
- backplane pieces
- proxies

* Tools
- go fmt: Format code
- goimports: Clean up imports
- golint: Code style checks
- go vet: Code fitness checks
- godep: Vendor your deps
- errcheck: check for unchecked errors

* Project Management
- Everything non-standard goes in a `Makefile`
- Use `-X`main.<name>=<value>` for injection

* Coding Practices: Structure

- `cmd/$CMD/main.go` pattern
.code cmd.console
- Balanced packages

* Coding Practices: Channels
- `struct{}` vs `bool` channels
- broadcast with `close()`
.code broadcast.go /^func main/,/^}/
- Single writter / multi reader

* Coding Practices: Initialization
- avoid init()
- Handle env vars in mains

* Coding Practices: HTTP
- close `http.Response.Body` (http.Client)
- Use `github.com/tylerb/graceful` (or equiv)
- Prefer stdlib compat libs vs. magic
- Wish: `net.context` was part of the stdlib (1.7 *maybe* as http.Request.Context)

* Coding Practices: Error Handling
Create error types
.code err.go /^type gitError/,

* Coding Practices: Error Handling (Cont)
- Annotate errors
.code err2.go
`github.com/juju/errors`
- Go routines must handle their own
.code err3.go /^func doStuff/,/^}/
- Rollbar (or equiv)

* Coding Practices: Testing
- Try to stay within the stdlib
- If you use table tests, include identifying info.
- Use ci (Travis/Circle)
- Test with `-race` and w/o.

*  Common Libraries
- github.com/joeshaw/envdecode
- github.com/rcrowley/go-metrics
- github.com/pborman/uuid
- github.com/Sirupsen/logrus
- github.com/heroku/rollbar or github.com/heroku/rollrus
- github.com/juju/errors
- github.com/fernet/fernet-go
- github.com/htcat/htcat
- github.com/BurntSushi/toml
- github.com/tylerb/graceful
- github.com/aws/aws-sdk-go
 ...(many more)

* Debatables
- Assertion / testing libs
- Logging Libraries

* Credits

Most credit goes to others, including past and present engineers @ Heroku.

* One More Thing

GoBridge: https://twitter.com/goinggodotnet/status/658033235641937920
